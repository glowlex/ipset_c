name: Publish

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  publish:
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.13t"]
    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.5
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry lock --no-update
        poetry install --no-interaction --no-root --sync --without dev
    - name: Build
      run: |
        source $VENV
        poetry build -o dist
    - name: Publish package
      run: |
        source $VENV
        pip install "twine>=5.0.0,<=6"
        twine upload dist/* --non-interactive --skip-existing -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}
